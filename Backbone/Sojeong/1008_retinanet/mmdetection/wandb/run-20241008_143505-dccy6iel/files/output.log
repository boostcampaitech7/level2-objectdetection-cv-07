loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
2024-10-08 14:35:06,755 - mmcv - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2024-10-08 14:35:06,755 - mmcv - INFO - load model from: torchvision://resnet50
2024-10-08 14:35:06,756 - mmcv - INFO - load checkpoint from torchvision path: torchvision://resnet50
2024-10-08 14:35:06,866 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2024-10-08 14:35:06,999 - mmcv - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2024-10-08 14:35:07,062 - mmcv - INFO - initialize RetinaHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'retina_cls', 'std': 0.01, 'bias_prob': 0.01}}
2024-10-08 14:35:07,106 - mmcv - INFO -
backbone.conv1.weight - torch.Size([64, 3, 7, 7]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,106 - mmcv - INFO -
backbone.bn1.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,107 - mmcv - INFO -
backbone.bn1.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,107 - mmcv - INFO -
backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,107 - mmcv - INFO -
backbone.layer1.0.bn1.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,107 - mmcv - INFO -
backbone.layer1.0.bn1.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,108 - mmcv - INFO -
backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,108 - mmcv - INFO -
backbone.layer1.0.bn2.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,108 - mmcv - INFO -
backbone.layer1.0.bn2.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,108 - mmcv - INFO -
backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.0.bn3.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.0.bn3.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.0.downsample.1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.0.downsample.1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,109 - mmcv - INFO -
backbone.layer1.1.bn1.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.bn1.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.bn2.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.bn2.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.bn3.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.1.bn3.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,110 - mmcv - INFO -
backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn1.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn1.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn2.weight - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn2.bias - torch.Size([64]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn3.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer1.2.bn3.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,111 - mmcv - INFO -
backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn1.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn1.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn2.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn2.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn3.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.bn3.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,112 - mmcv - INFO -
backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.0.downsample.1.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.0.downsample.1.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.bn1.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.bn1.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.bn2.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,113 - mmcv - INFO -
backbone.layer2.1.bn2.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.1.bn3.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.1.bn3.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.2.bn1.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.2.bn1.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,114 - mmcv - INFO -
backbone.layer2.2.bn2.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.2.bn2.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.2.bn3.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.2.bn3.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.3.bn1.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.3.bn1.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,115 - mmcv - INFO -
backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer2.3.bn2.weight - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer2.3.bn2.bias - torch.Size([128]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer2.3.bn3.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer2.3.bn3.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer3.0.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer3.0.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,116 - mmcv - INFO -
backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.downsample.1.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,117 - mmcv - INFO -
backbone.layer3.0.downsample.1.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,118 - mmcv - INFO -
backbone.layer3.1.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.1.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,119 - mmcv - INFO -
backbone.layer3.2.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.2.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.2.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.3.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.3.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,120 - mmcv - INFO -
backbone.layer3.3.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.3.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.3.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.3.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.4.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,121 - mmcv - INFO -
backbone.layer3.4.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.4.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,122 - mmcv - INFO -
backbone.layer3.5.bn1.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.bn1.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.bn2.weight - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.bn2.bias - torch.Size([256]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.bn3.weight - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer3.5.bn3.bias - torch.Size([1024]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,123 - mmcv - INFO -
backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.bn1.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.bn1.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.bn2.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.bn2.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,124 - mmcv - INFO -
backbone.layer4.0.bn3.weight - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.0.bn3.bias - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.0.downsample.1.weight - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.0.downsample.1.bias - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.1.bn1.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.1.bn1.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,125 - mmcv - INFO -
backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.1.bn2.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.1.bn2.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.1.bn3.weight - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.1.bn3.bias - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.2.bn1.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,126 - mmcv - INFO -
backbone.layer4.2.bn1.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.bn2.weight - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.bn2.bias - torch.Size([512]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.bn3.weight - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
backbone.layer4.2.bn3.bias - torch.Size([2048]):
PretrainedInit: load from torchvision://resnet50

2024-10-08 14:35:07,127 - mmcv - INFO -
neck.lateral_convs.0.conv.weight - torch.Size([256, 512, 1, 1]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.lateral_convs.0.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.lateral_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.lateral_convs.1.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.lateral_convs.2.conv.weight - torch.Size([256, 2048, 1, 1]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.lateral_convs.2.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,128 - mmcv - INFO -
neck.fpn_convs.0.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,129 - mmcv - INFO -
neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.1.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.2.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.3.conv.weight - torch.Size([256, 2048, 3, 3]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.3.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.4.conv.weight - torch.Size([256, 256, 3, 3]):
XavierInit: gain=1, distribution=uniform, bias=0

2024-10-08 14:35:07,130 - mmcv - INFO -
neck.fpn_convs.4.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,130 - mmcv - INFO -
bbox_head.cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.0.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.1.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.1.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.2.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.2.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.3.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.cls_convs.3.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,131 - mmcv - INFO -
bbox_head.reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.0.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.1.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.1.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.2.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.2.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.3.conv.weight - torch.Size([256, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.reg_convs.3.conv.bias - torch.Size([256]):
The value is the same before and after calling `init_weights` of RetinaNet

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.retina_cls.weight - torch.Size([90, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=-4.59511985013459

2024-10-08 14:35:07,132 - mmcv - INFO -
bbox_head.retina_cls.bias - torch.Size([90]):
NormalInit: mean=0, std=0.01, bias=-4.59511985013459

2024-10-08 14:35:07,133 - mmcv - INFO -
bbox_head.retina_reg.weight - torch.Size([36, 256, 3, 3]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:07,133 - mmcv - INFO -
bbox_head.retina_reg.bias - torch.Size([36]):
NormalInit: mean=0, std=0.01, bias=0

2024-10-08 14:35:09,026 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2024-10-08 14:35:09,028 - mmdet - INFO - Start running, host: root@instance-11962, work_dir: /data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/work_dirs/retinanet
2024-10-08 14:35:09,029 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook
(NORMAL      ) CheckpointHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook
(NORMAL      ) NumClassCheckHook
(LOW         ) IterTimerHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook
(LOW         ) IterTimerHook
 --------------------
after_train_iter:
(ABOVE_NORMAL) OptimizerHook
(NORMAL      ) CheckpointHook
(LOW         ) IterTimerHook
(VERY_LOW    ) TextLoggerHook
 --------------------
after_train_epoch:
(NORMAL      ) CheckpointHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_epoch:
(NORMAL      ) NumClassCheckHook
(LOW         ) IterTimerHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_iter:
(LOW         ) IterTimerHook
 --------------------
after_val_iter:
(LOW         ) IterTimerHook
 --------------------
after_val_epoch:
(VERY_LOW    ) TextLoggerHook
 --------------------
after_run:
(VERY_LOW    ) TextLoggerHook
 --------------------
2024-10-08 14:35:09,029 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2024-10-08 14:35:09,029 - mmdet - INFO - Checkpoints will be saved to /data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/work_dirs/retinanet by HardDiskBackend.
2024-10-08 14:35:19,425 - mmdet - INFO - Epoch [1][50/1221]	lr: 9.890e-04, eta: 0:50:35, time: 0.208, data_time: 0.051, memory: 1681, loss_cls: 1.1337, loss_bbox: 0.6715, loss: 1.8052, grad_norm: 0.4870
2024-10-08 14:35:25,752 - mmdet - INFO - Epoch [1][100/1221]	lr: 1.988e-03, eta: 0:40:33, time: 0.127, data_time: 0.006, memory: 1681, loss_cls: 1.1316, loss_bbox: 0.6631, loss: 1.7946, grad_norm: 0.6350
2024-10-08 14:35:32,209 - mmdet - INFO - Epoch [1][150/1221]	lr: 2.987e-03, eta: 0:37:20, time: 0.129, data_time: 0.006, memory: 1715, loss_cls: 1.1266, loss_bbox: 0.6425, loss: 1.7691, grad_norm: 1.0491
2024-10-08 14:35:38,577 - mmdet - INFO - Epoch [1][200/1221]	lr: 3.986e-03, eta: 0:35:34, time: 0.127, data_time: 0.006, memory: 1715, loss_cls: 1.0345, loss_bbox: 0.6344, loss: 1.6689, grad_norm: 3.2819
2024-10-08 14:35:44,944 - mmdet - INFO - Epoch [1][250/1221]	lr: 4.985e-03, eta: 0:34:28, time: 0.127, data_time: 0.006, memory: 1715, loss_cls: 1.0900, loss_bbox: 0.6183, loss: 1.7083, grad_norm: 1.8826
2024-10-08 14:35:51,377 - mmdet - INFO - Epoch [1][300/1221]	lr: 5.984e-03, eta: 0:33:45, time: 0.129, data_time: 0.006, memory: 1715, loss_cls: 1.1097, loss_bbox: 0.6358, loss: 1.7456, grad_norm: 1.2619
2024-10-08 14:35:57,850 - mmdet - INFO - Epoch [1][350/1221]	lr: 6.983e-03, eta: 0:33:14, time: 0.129, data_time: 0.006, memory: 1715, loss_cls: 1.1059, loss_bbox: 0.6423, loss: 1.7482, grad_norm: 0.4938
2024-10-08 14:36:04,151 - mmdet - INFO - Epoch [1][400/1221]	lr: 7.982e-03, eta: 0:32:43, time: 0.126, data_time: 0.006, memory: 1715, loss_cls: 1.1015, loss_bbox: 0.6316, loss: 1.7330, grad_norm: 2.6281
2024-10-08 14:36:10,482 - mmdet - INFO - Epoch [1][450/1221]	lr: 8.981e-03, eta: 0:32:19, time: 0.127, data_time: 0.006, memory: 1715, loss_cls: 1.0780, loss_bbox: 0.6241, loss: 1.7021, grad_norm: 0.8974
2024-10-08 14:36:17,138 - mmdet - INFO - Epoch [1][500/1221]	lr: 9.980e-03, eta: 0:32:07, time: 0.133, data_time: 0.006, memory: 1715, loss_cls: 1.0394, loss_bbox: 0.6298, loss: 1.6692, grad_norm: 1.7487
2024-10-08 14:36:23,503 - mmdet - INFO - Epoch [1][550/1221]	lr: 1.000e-02, eta: 0:31:49, time: 0.127, data_time: 0.006, memory: 1739, loss_cls: 1.0216, loss_bbox: 0.6438, loss: 1.6654, grad_norm: 5.4338
2024-10-08 14:36:29,937 - mmdet - INFO - Epoch [1][600/1221]	lr: 1.000e-02, eta: 0:31:34, time: 0.129, data_time: 0.006, memory: 1739, loss_cls: 0.9365, loss_bbox: 0.6406, loss: 1.5771, grad_norm: 0.5698
2024-10-08 14:36:36,340 - mmdet - INFO - Epoch [1][650/1221]	lr: 1.000e-02, eta: 0:31:20, time: 0.128, data_time: 0.006, memory: 1739, loss_cls: 0.8545, loss_bbox: 0.6321, loss: 1.4866, grad_norm: 1.4423
2024-10-08 14:36:42,799 - mmdet - INFO - Epoch [1][700/1221]	lr: 1.000e-02, eta: 0:31:08, time: 0.129, data_time: 0.006, memory: 1739, loss_cls: 0.8153, loss_bbox: 0.6359, loss: 1.4511, grad_norm: 1.3708
2024-10-08 14:36:49,230 - mmdet - INFO - Epoch [1][750/1221]	lr: 1.000e-02, eta: 0:30:57, time: 0.129, data_time: 0.006, memory: 1739, loss_cls: 0.7818, loss_bbox: 0.6200, loss: 1.4018, grad_norm: 1.6175
2024-10-08 14:36:55,680 - mmdet - INFO - Epoch [1][800/1221]	lr: 1.000e-02, eta: 0:30:46, time: 0.129, data_time: 0.007, memory: 1739, loss_cls: 0.7251, loss_bbox: 0.6222, loss: 1.3473, grad_norm: 1.6546
2024-10-08 14:37:02,090 - mmdet - INFO - Epoch [1][850/1221]	lr: 1.000e-02, eta: 0:30:35, time: 0.128, data_time: 0.007, memory: 1739, loss_cls: 0.7068, loss_bbox: 0.6102, loss: 1.3171, grad_norm: 1.8468
2024-10-08 14:37:08,432 - mmdet - INFO - Epoch [1][900/1221]	lr: 1.000e-02, eta: 0:30:24, time: 0.127, data_time: 0.007, memory: 1739, loss_cls: 0.6851, loss_bbox: 0.5754, loss: 1.2604, grad_norm: 2.2233
2024-10-08 14:37:14,782 - mmdet - INFO - Epoch [1][950/1221]	lr: 1.000e-02, eta: 0:30:13, time: 0.127, data_time: 0.007, memory: 1739, loss_cls: 0.7137, loss_bbox: 0.5906, loss: 1.3043, grad_norm: 2.3070
2024-10-08 14:37:21,148 - mmdet - INFO - Epoch [1][1000/1221]	lr: 1.000e-02, eta: 0:30:03, time: 0.127, data_time: 0.006, memory: 1739, loss_cls: 0.7562, loss_bbox: 0.5840, loss: 1.3402, grad_norm: 2.3702
2024-10-08 14:37:27,579 - mmdet - INFO - Epoch [1][1050/1221]	lr: 1.000e-02, eta: 0:29:54, time: 0.129, data_time: 0.007, memory: 1739, loss_cls: 0.6613, loss_bbox: 0.5596, loss: 1.2208, grad_norm: 2.1541
2024-10-08 14:37:33,987 - mmdet - INFO - Epoch [1][1100/1221]	lr: 1.000e-02, eta: 0:29:45, time: 0.128, data_time: 0.007, memory: 1739, loss_cls: 0.6486, loss_bbox: 0.5503, loss: 1.1989, grad_norm: 2.4449
2024-10-08 14:37:40,288 - mmdet - INFO - Epoch [1][1150/1221]	lr: 1.000e-02, eta: 0:29:35, time: 0.126, data_time: 0.006, memory: 1739, loss_cls: 0.6422, loss_bbox: 0.5180, loss: 1.1602, grad_norm: 2.5006
2024-10-08 14:37:46,602 - mmdet - INFO - Epoch [1][1200/1221]	lr: 1.000e-02, eta: 0:29:26, time: 0.126, data_time: 0.006, memory: 1739, loss_cls: 0.6308, loss_bbox: 0.5116, loss: 1.1423, grad_norm: 2.1253
2024-10-08 14:37:49,359 - mmdet - INFO - Saving checkpoint at 1 epochs
2024-10-08 14:37:58,921 - mmdet - INFO - Epoch [2][50/1221]	lr: 1.000e-02, eta: 0:29:09, time: 0.172, data_time: 0.051, memory: 1739, loss_cls: 0.6173, loss_bbox: 0.5032, loss: 1.1205, grad_norm: 2.2924
2024-10-08 14:38:05,341 - mmdet - INFO - Epoch [2][100/1221]	lr: 1.000e-02, eta: 0:29:01, time: 0.128, data_time: 0.006, memory: 1739, loss_cls: 0.5749, loss_bbox: 0.4935, loss: 1.0683, grad_norm: 2.1043
2024-10-08 14:38:11,728 - mmdet - INFO - Epoch [2][150/1221]	lr: 1.000e-02, eta: 0:28:53, time: 0.128, data_time: 0.006, memory: 1739, loss_cls: 0.5760, loss_bbox: 0.4584, loss: 1.0344, grad_norm: 2.3837
2024-10-08 14:38:18,037 - mmdet - INFO - Epoch [2][200/1221]	lr: 1.000e-02, eta: 0:28:45, time: 0.126, data_time: 0.006, memory: 1739, loss_cls: 0.6061, loss_bbox: 0.4537, loss: 1.0598, grad_norm: 2.5376
2024-10-08 14:38:24,362 - mmdet - INFO - Epoch [2][250/1221]	lr: 1.000e-02, eta: 0:28:36, time: 0.127, data_time: 0.006, memory: 1739, loss_cls: 0.5822, loss_bbox: 0.4598, loss: 1.0421, grad_norm: 2.3185
2024-10-08 14:38:30,740 - mmdet - INFO - Epoch [2][300/1221]	lr: 1.000e-02, eta: 0:28:29, time: 0.128, data_time: 0.006, memory: 1739, loss_cls: 0.5790, loss_bbox: 0.4387, loss: 1.0176, grad_norm: 2.3704
2024-10-08 14:38:37,156 - mmdet - INFO - Epoch [2][350/1221]	lr: 1.000e-02, eta: 0:28:21, time: 0.128, data_time: 0.006, memory: 1739, loss_cls: 0.5836, loss_bbox: 0.4510, loss: 1.0346, grad_norm: 2.5110
2024-10-08 14:38:43,382 - mmdet - INFO - Epoch [2][400/1221]	lr: 1.000e-02, eta: 0:28:13, time: 0.125, data_time: 0.006, memory: 1739, loss_cls: 0.5910, loss_bbox: 0.4489, loss: 1.0399, grad_norm: 2.5030
2024-10-08 14:38:49,716 - mmdet - INFO - Epoch [2][450/1221]	lr: 1.000e-02, eta: 0:28:05, time: 0.127, data_time: 0.006, memory: 1742, loss_cls: 0.5560, loss_bbox: 0.4230, loss: 0.9790, grad_norm: 2.2901
2024-10-08 14:38:56,114 - mmdet - INFO - Epoch [2][500/1221]	lr: 1.000e-02, eta: 0:27:58, time: 0.128, data_time: 0.006, memory: 1742, loss_cls: 0.5440, loss_bbox: 0.4062, loss: 0.9501, grad_norm: 2.3015
2024-10-08 14:39:02,650 - mmdet - INFO - Epoch [2][550/1221]	lr: 1.000e-02, eta: 0:27:52, time: 0.131, data_time: 0.006, memory: 1742, loss_cls: 0.5519, loss_bbox: 0.3980, loss: 0.9498, grad_norm: 2.5184
2024-10-08 14:39:09,024 - mmdet - INFO - Epoch [2][600/1221]	lr: 1.000e-02, eta: 0:27:44, time: 0.127, data_time: 0.006, memory: 1742, loss_cls: 0.5636, loss_bbox: 0.4031, loss: 0.9667, grad_norm: 2.4164
2024-10-08 14:39:15,368 - mmdet - INFO - Epoch [2][650/1221]	lr: 1.000e-02, eta: 0:27:37, time: 0.127, data_time: 0.006, memory: 1742, loss_cls: 0.5403, loss_bbox: 0.3920, loss: 0.9323, grad_norm: 2.4091
2024-10-08 14:39:21,704 - mmdet - INFO - Epoch [2][700/1221]	lr: 1.000e-02, eta: 0:27:29, time: 0.127, data_time: 0.006, memory: 1742, loss_cls: 0.5652, loss_bbox: 0.4078, loss: 0.9731, grad_norm: 2.4986
2024-10-08 14:39:28,067 - mmdet - INFO - Epoch [2][750/1221]	lr: 1.000e-02, eta: 0:27:22, time: 0.127, data_time: 0.006, memory: 1742, loss_cls: 0.5532, loss_bbox: 0.4124, loss: 0.9656, grad_norm: 2.4440
2024-10-08 14:39:34,735 - mmdet - INFO - Epoch [2][800/1221]	lr: 1.000e-02, eta: 0:27:17, time: 0.133, data_time: 0.006, memory: 1742, loss_cls: 0.5454, loss_bbox: 0.4189, loss: 0.9642, grad_norm: 2.1825
2024-10-08 14:39:41,234 - mmdet - INFO - Epoch [2][850/1221]	lr: 1.000e-02, eta: 0:27:10, time: 0.130, data_time: 0.006, memory: 1742, loss_cls: 0.5488, loss_bbox: 0.4035, loss: 0.9523, grad_norm: 2.2683
2024-10-08 14:39:47,731 - mmdet - INFO - Epoch [2][900/1221]	lr: 1.000e-02, eta: 0:27:04, time: 0.130, data_time: 0.006, memory: 1742, loss_cls: 0.5454, loss_bbox: 0.3992, loss: 0.9445, grad_norm: 2.3454
2024-10-08 14:39:54,109 - mmdet - INFO - Epoch [2][950/1221]	lr: 1.000e-02, eta: 0:26:57, time: 0.128, data_time: 0.007, memory: 1742, loss_cls: 0.5330, loss_bbox: 0.3708, loss: 0.9039, grad_norm: 2.3475
2024-10-08 14:40:00,504 - mmdet - INFO - Epoch [2][1000/1221]	lr: 1.000e-02, eta: 0:26:50, time: 0.128, data_time: 0.006, memory: 1742, loss_cls: 0.5612, loss_bbox: 0.3962, loss: 0.9574, grad_norm: 2.4370
2024-10-08 14:40:06,889 - mmdet - INFO - Epoch [2][1050/1221]	lr: 1.000e-02, eta: 0:26:43, time: 0.128, data_time: 0.006, memory: 1742, loss_cls: 0.5509, loss_bbox: 0.3905, loss: 0.9414, grad_norm: 2.2673
Traceback (most recent call last):
  File "/data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/train.py", line 158, in <module>
    main()
  File "/data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/train.py", line 154, in main
    train_model(model, datasets, cfg)
  File "/data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/train.py", line 140, in train_model
    train_detector(model, datasets[0], cfg, distributed=False, validate=False)
  File "/data/ephemeral/home/Sojeong/level2-objectdetection-cv-07/Backbone/Sojeong/1008_retinanet/mmdetection/mmdet/apis/train.py", line 244, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/opt/conda/lib/python3.10/site-packages/mmcv/runner/epoch_based_runner.py", line 136, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/mmcv/runner/epoch_based_runner.py", line 54, in train
    self.call_hook('after_train_iter')
  File "/opt/conda/lib/python3.10/site-packages/mmcv/runner/base_runner.py", line 317, in call_hook
    getattr(hook, fn_name)(self)
  File "/opt/conda/lib/python3.10/site-packages/mmcv/runner/hooks/optimizer.py", line 65, in after_train_iter
    runner.outputs['loss'].backward()
  File "/opt/conda/lib/python3.10/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.10/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
